<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ofg.foreign_teacher_server.dao.WxCourseMapper">
  <resultMap id="BaseResultMap" type="com.ofg.foreign_teacher_server.domain.WxCourse">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="class_time" jdbcType="INTEGER" property="classTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="cover_id" jdbcType="BIGINT" property="coverId" />
    <result column="area_id" jdbcType="BIGINT" property="areaId" />
    <result column="del_sign" jdbcType="INTEGER" property="delSign" />
    <result column="phone_number" jdbcType="BIGINT" property="phoneNumber" />
    <result column="user_open_id" jdbcType="VARCHAR" property="openId" />
  </resultMap>
  <resultMap id="ExBaseResultMap" type="com.ofg.foreign_teacher_server.domain.ex.ExWxCourse">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="class_time" jdbcType="INTEGER" property="classTime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="path" jdbcType="VARCHAR" property="cover" />
    <result column="area" jdbcType="VARCHAR" property="area" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from wx_course
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ofg.foreign_teacher_server.domain.WxCourse">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into wx_course (`name`, description, price, 
      class_time, `type`, cover_id, 
      area_id, del_sign, phone_number, user_open_id)
    values (#{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{classTime,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{coverId,jdbcType=BIGINT}, 
      #{areaId,jdbcType=BIGINT}, #{delSign,jdbcType=INTEGER}, #{phoneNumber,jdbcType=BIGINT},
    #{openId,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ofg.foreign_teacher_server.domain.WxCourse">
    update wx_course
    set `name` = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      class_time = #{classTime,jdbcType=INTEGER},
      `type` = #{type,jdbcType=INTEGER},
      cover_id = #{coverId,jdbcType=BIGINT},
      area_id = #{areaId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, `name`, description, price, class_time, `type`, cover_id, area_id
    from wx_course
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, `name`, description, price, class_time, `type`, cover_id, area_id
    from wx_course
  </select>
  <select id="queryListByType" parameterType="java.lang.Integer" resultType="map">
    select wc.id, wc.`name`, wc.description, wc.price, wc.class_time, (
      select count(wac.type)
      from wx_authcourse wac
      where wac.course_id = wc.id and wac.type = 1
    ) as authCourseCount,
    (
      select count(id)
      from wx_comment wcm
      where wcm.course_id = wc.id
    ) as commentCount,
    f.path as cover
    from wx_course wc, sys_file f
    where
    <if test="type != null">
      wc.type = #{type, jdbcType=INTEGER}
    </if>
    and f.id = wc.cover_id
  </select>
  <select id="queryListByUser" parameterType="java.util.Map" resultType="map">
    select wc.id, wc.`name`, wc.description, wc.price, wc.class_time, wac.status as status,
            f.path as cover, wc.phone_number as phoneNumber, date_format(wac.ctime, '%m-%d %H:%i:%s') as ctime,
            wac.user_open_id as userId
    from wx_course wc, wx_authcourse wac, sys_file f
    where
      <if test="openId != null">
        wac.user_open_id = #{openId, jdbcType=VARCHAR}
      </if>
      <if test="status != null">
        and wac.status =#{status, jdbcType=INTEGER}
      </if>
      and f.id = wc.cover_id and wc.id = wac.course_id
      order by wac.id desc
  </select>

  <select id="queryById" parameterType="java.lang.Long" resultType="map" >
    select wc.id, (
        select count(if(wac.type = 1,true,null))
        from wx_authcourse wac
        where wac.course_id = wc.id
    ) as learnCount,
    (
        select ifnull(count(if(wcm.star > 4, true, null))/count(wcm.star), 0)
        from wx_comment wcm
        where wc.id = wcm.course_id
    ) as praiseRate
    from wx_course wc
    where wc.id = #{id, jdbcType=BIGINT}

  </select>

</mapper>